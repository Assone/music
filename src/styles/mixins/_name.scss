@import '../helpers/mixins';

$element-separator: '__';
$modifier-separator: '--';
$state-prefix: 'is-';
$ability-prefix: 'can-';

@mixin b($namespace, $block: '') {
  @if $block == '' {
    $B: $namespace !global;
  } @else {
    $N: $namespace;
    $B: $namespace + '-' + $block !global;
  }

  .#{$B} {
    @content;
  }
}

@mixin e($element) {
  $E: $element !global;
  $selector: &;
  $currentSelector: '';

  @each $unit in $element {
    $currentSelector: #{$currentSelector + '.' + $B + $element-separator + $unit + ','};
  }

  @if hitAllSpecialNestRule($selector) {
    @at-root {
      #{$selector} {
        #{$currentSelector} {
          @content;
        }
      }
    }
  } @else {
    @at-root {
      #{$currentSelector} {
        @content;
      }
    }
  }
}

@mixin m($modifier) {
  $selector: &;
  $currentSelector: '';

  @each $unit in $modifier {
    $currentSelector: #{$currentSelector + & + $modifier-separator + $unit + ','};
  }

  @at-root {
    #{$currentSelector} {
      @content;
    }
  }
}

@mixin when($state) {
  @at-root {
    &.#{$state-prefix + $state} {
      @content;
    }
  }
}

@mixin can($ability) {
  @at-root {
    &.#{$ability-prefix + $ability} {
      @content;
    }
  }
}